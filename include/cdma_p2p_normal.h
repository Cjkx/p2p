#ifndef  __CDMA_P2P_NORMAL_H__
#define  __CDMA_P2P_NORMAL_H__

typedef enum {
	CDMA_SEND = 0,
	CDMA_READ = 1,
	CDMA_WRITE = 2,
	CDMA_GENERAL = 3,
	CDMA_RECEIVE = 4,
	CDMA_LOSSY_COMPRESS = 5,
	CDMA_LOSSY_DECOMPRESS = 6,
	CDMA_SYS = 7,
	CDMA_TCP_SEND = 8,
	CDMA_TCP_RECEIVE = 9,
	CDMA_TYPE_NUM,
} CDMA_TYPE;

typedef enum {
	DATA_INT8 = 0,
	DATA_FP16 = 1,
	DATA_FP32 = 2,
	DATA_INT16 = 3,
	DATA_INT32 = 4,
	DATA_BF16 = 5,
	DATA_FP20 = 6,
	DATA_FORMAT_NUM,
} CDMA_DATA_FORMAT;

typedef enum {
	CHAIN_END = 0,
	NOP = 1,
	SYS_TR_WR = 2,
	SYS_MSG_TX_SEND = 3,
	SYS_MSG_TX_WAIT = 4,
	SYS_MSG_RX_SEND = 5,
	SYS_MSG_RX_WAIT = 6,
	SYS_CMD_NUM,
} SYS_CMD_TYPE;

typedef enum {
	TCP_SEND = 1,
	TCP_RECEIVE = 2,
	NORMAL_GENERAL_DESC = 3,
	NORMAL_GENERAL_PIO = 4,
} P2P_MODE;

typedef enum {
	FD = 1,
	LD = 2,
	MD = 3,
	FLD = 4,
} DESC_FLAG;

typedef enum {
	RN = 0x80,
	RNI = 0x90
} DATA_INTERFACE;

typedef struct {
    u8 dest_mac[6];
    u8 source_mac[6];
    struct {
        unsigned int priority: 3;
        unsigned int vlan_id: 12;
        unsigned int cfi: 1;
        unsigned int ether_type: 16;
    } vlan_header;
} eth_header_t;





#define CDMA_PHY_ADDRESS_START 		0x6C08790000ULL
#define CDMA_PHY_ADDRESS_END  		0x6C0879FFFFULL
#define CDMA_MEMORY_RANGE 		(CDMA_PHY_ADDRESS_END -\
					CDMA_PHY_ADDRESS_START + 1)



#define DDR_PHY_ADDRESS_START 		0x000000000ULL
#define DDR_PHY_ADDRESS_END 		0x01FFFFFFFULL
#define DDR_MEMORY_RANGE 		(DDR_PHY_ADDRESS_END -\
					DDR_PHY_ADDRESS_START + 1)

#define GENERAL_DESC_PHY_OFFSET		0X10000000ULL
#define TCP_SEND_DESC_PHY_OFFSET	0X11000000ULL
#define TCP_RCV_DESC_PHY_OFFSET		0X12000000ULL
#define CDMA_PMU_START_ADDR		0x13000000ULL

#define CDMA_PMU_SIZE		        (1 * 1024 * 1024)

#define CMD_REG_OFFSET			0x0000
#define DESC_UPDT_OFFSET		0x0400
#define CSR_REG_OFFSET			0x1000

#define GENERAL_CMD_SIZE		0x20
#define TCP_SEND_CMD_SIZE 		0X10
#define TCP_RCV_CMD_SIZE 		0X10

// CMD_GENERAL_REG
#define CDMA_CMD_INTR_ENABLE		0
#define CDMA_CMD_BREAKPOINT		3
#define CDMA_CMD_CMD_TYPE		4
#define CDMA_CMD_SPECIAL_FUNCTION	8
#define CDMA_CMD_FILL_CONSTANT_EN	11
#define CDMA_CMD_SRC_DATA_FORMAT	12
#define CDMA_CMD_SRC_START_ADDR_H13	16
#define CDMA_CMD_DST_START_ADDR_H13	32
#define CDMA_CMD_CMD_LENGTH		0
#define CDMA_CMD_SRC_START_ADDR_L32	32
#define CDMA_CMD_DST_START_ADDR_L32	0

// CDMA_TCP_SEND_REG
#define CMD_TCP_SEND_INTR_ENABLE	0
#define CMD_TCP_SEND_OWN		1
#define CMD_TCP_SEND_FD			2
#define CMD_TCP_SEND_LD			3
#define CMD_TCP_SEND_CMD_TYPE		4
#define CMD_TCP_SEND_BUF_LEN		8
#define CMD_TCP_SEND_BREAKPOINT		24
#define CMD_TCP_SEND_FRAME_LEN		32
#define CMD_TCP_SEND_BUF_ADDR_L32	0
#define CMD_TCP_SEND_BUF_ADDR_H8	32
#define CMD_TCP_SEND_CMD_ID		40

//CMD_TCP_RCV_REG
#define CMD_TCP_RCV_INTR_ENABLE		0
#define CMD_TCP_RCV_OWN			1
#define CMD_TCP_RCV_CMD_TYPE		4
#define CMD_TCP_RCV_BUF_LEN		8
#define CMD_TCP_RCV_BREAKPOINT		24
#define CMD_TCP_RCV_BUF_ADDR_L32	0
#define CMD_TCP_RCV_BUF_ADDR_H8		32
#define CMD_TCP_RCV_CMD_ID		40

// DESCRIPTOR_UPDT
#define REG_DESCRIPTOR_UPDATE 		0

// CSR_REG_BASE
#define	CDMA_CSR_0_OFFSET		0x0
#define	CDMA_CSR_1_OFFSET		0x4	//reg_rcv_addr_h32
#define CDMA_CSR_4_OFFSET		0x10
#define CDMA_CSR_5_OFFSET		0x14
#define CDMA_CSR_6_OFFSET		0x18
#define CDMA_CSR_9_OFFSET		0x2c
#define CDMA_CSR_10_OFFSET		0x30
#define CDMA_CSR_PMU_START_ADDR_L32	0x34
#define CDMA_CSR_PMU_START_ADDR_H1	0x38
#define CDMA_CSR_PMU_END_ADDR_L32	0x3c
#define CDMA_CSR_PMU_END_ADDR_H1	0x40
#define CDMA_CSR_20_Setting		0x58	//intr
#define REG_BASE_ADDR_REGINE0		0x5c
#define CDMA_CSR_PMU_WR_ADDR_L32	0x110
#define CDMA_CSR_PMU_WR_ADDR_H1         0x114
#define CDMA_CSR_141_OFFSET		0x23c
#define CDMA_CSR_142_OFFSET		0x240
#define CDMA_CSR_143_Setting		0x244
#define CDMA_CSR_144_Setting		0x248
#define CDMA_CSR_148_Setting		0x258
#define CDMA_CSR_149_Setting		0x25c
#define CDMA_CSR_150_Setting		0x260
#define CDMA_CSR_151_Setting		0x264
#define TCP_CSR_02_Setting		0x308
#define TCP_CSR_03_Setting		0x30c
#define TCP_CSR_04_Setting		0x310
#define TCP_CSR_05_Setting		0x314
#define TCP_CSR_06_Setting		0x318
#define TCP_CSR_07_Setting		0x31c
#define TCP_CSR_08_Setting		0x320
#define TCP_CSR_09_Setting		0x324
#define TCP_CSR_10_Setting		0x328
#define TCP_CSR_13_Setting		0x334
#define TCP_CSR_14_Setting		0x338
#define TCP_CSR_20_Setting		0x350
#define MTL_FAB_CSR_00			0x3c0
#define NORMAL_FRAME_LEN		0x420

// CDMA_CSR_0
#define	REG_DES_MODE_ENABLE 	0
#define	REG_SYNC_ID_RESET 	1
#define REG_DES_CLR		2
#define REG_PERF_MONITOR_EN	3
#define REG_CONNECTION_ON	6
#define	REG_HW_REPLAY_EN	7
#define REG_ETH_CSR_UPDT	10



// CDMA_CSR_4
#define REG_REPLAY_MAX_TIME 		19	 //bit 19~22
#define REG_SEC_LENGTH			16	//bit 16~18
#define REG_DES_MAX_ARLEN		23	//bit 23~25
#define REG_REPLAY_RECONTINUE		26

// CDMA_CSR_5
#define REG_TIMEOUT_MAXTIME		0 	//bit 0~19

// CDMA_CSR_6
#define REG_CDMA_VLAN_ID		0	//bit 0~15
#define	REG_CDMA_VLAN_ID_VTIR		16	//bit 16~17
#define REG_CDMA_CPC			18	//bit 18~19
#define REG_CDMA_SAIC			20	//bit 20~21
#define REG_CDMA_CIC			22	//bit 22~23

// CDMA_CSR_9
#define REG_DES_ADDR_L32		0

// CDMA_CSR_10

#define REG_DES_ADDR_H1			0
// CDMA_CSR_20_Setting
#define INTR_CMD_DONE_STATUS		0
#define INTR_TCP_RCV_CMD_DONE		28
#define INTR_TCP_SEND_CMD_DONE		29

// CDMA_CSR_141
#define  REG_INTRA_DIE_READ_ADDR_H8	0	//bit 0~7
#define  REG_INTRA_DIE_WRITE_ADDR_H8	8	//bit 8~15
// CDMA_CSR_142
#define REG_DES_READ_ADDR_H8		0	//bit 0~7
#define REG_DES_WRITE_ADDR_H8		8	//bit 8~15
// CDMA_CSR_143
#define REG_TXCH_READ_ADDR_H8		0
#define REG_TXCH_WRITE_ADDR_H8		8
// CDMA_CSR_144
#define REG_RXCH_READ_ADDR_H8		0
#define REG_RXCH_WRITE_ADDR_H8		8
// MTL_FAB_CSR_00
#define REG_CDMA_TX_CH_ID		0	//bit 0~3
#define REG_CDMA_RX_CH_ID		4	//bit 4~7
#define REG_CDMA_FAB_ARBITRATION	8	//bit 8~9
#define REG_CDMA_FAB_BYPASS		10

// TCP_CSR_02_Setting
#define REG_TCP_SEND_DES_MODE_ENABLE	0
#define REG_TCP_RECEIVE_DES_MODE_ENABLE	1
//  TCP_CSR_20_Setting
#define REG_TCP_CSR_UPDT		0



#endif
